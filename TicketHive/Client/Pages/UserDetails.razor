@page "/userdetails"
@using TicketHive.Bll.Services.Interfaces;
@using TicketHive.Client.LocalStorage;
@inject IUnitOfService unitOfService;
@inject NavigationManager NavigationManager;
@inject LocalStorageManager _localStorageStorage;



<h3>UserDetails</h3>

<div class="container">
    <h1 class="mb-4">User Settings</h1>
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Change Password</h5>
                    <form>
                        <div class="form-group">
                            <label for="current-password">Current Password</label>
                            <input type="password" class="form-control" id="current-password" @bind-value="@currentPassword">
                        </div>
                        <div class="form-group">
                            <label for="new-password">New Password</label>
                            <input type="password" class="form-control" id="new-password" @bind-value="@newPassword">
                        </div>
                        <div class="form-group">
                            <label for="confirm-password">Confirm Password</label>
                            <input type="password" class="form-control" id="confirm-password" @bind-value="@confirmPassword">
                        </div>
                        <button type="submit" class="btn btn-primary" @onclick:preventDefault @onclick="@ChangePassword">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Change Country</h5>
                    <form>
                        <div class="form-group">
                            <label for="country">Country</label>
                            <select class="form-control" @bind="@countryName" id="country">
                                @if (_allCountries is not null)
                                {
                                    foreach (var e in _allCountries)
                                    {
                                        <option>@e.Name</option>
                                    }
                                }
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary" @onclick:preventDefault @onclick="@ChangeCountry">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>



@code {
    private IEnumerable<CountryViewModel> _allCountries = new List<CountryViewModel>();
    private string currentPassword;
    private string newPassword;
    private string confirmPassword;
    private string countryName;


    protected override async Task OnInitializedAsync()
    {
        await GetAllCountries();
    }

    private async Task GetAllCountries()
    {
        _allCountries = await unitOfService.CountryService.GetAllAsync();
    }

    private async Task ChangePassword()
    {
        if (newPassword == currentPassword && string.IsNullOrEmpty(currentPassword) == false
            && string.IsNullOrEmpty(currentPassword) == false)
        {
            await unitOfService.UserService.UpdateAsync(new UserViewModel
                {
                    CurrentPassword = currentPassword,
                    NewPassword = newPassword,
                });
        }
    }
    private async Task ChangeCountry()
    {
        if (string.IsNullOrEmpty(countryName) == false)
        {
            await unitOfService.UserService.UpdateAsync(new UserViewModel
                {
                    CountryName = countryName,
                });
        }
    }
}
