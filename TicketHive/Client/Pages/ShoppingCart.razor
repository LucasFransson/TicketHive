@page "/cart"

<h3>ShoppingCart</h3>

<div class="card">
    <div class="card-body">
        <div class="row">
@*            <div class="col-md-4">
                <img src="product-image.jpg" class="img-fluid">
            </div>*@
            <div class="col-md-8">
                <h5 class="card-title">Product Name</h5>
                <p class="card-text">Product Description</p>
                <p class="card-text">Price: $19.99</p>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <button class="btn btn-outline-secondary" type="button" @onclick="DecreaseCount">-</button>
                    </div>
                    <input type="text" class="form-control" placeholder="@currentCount" aria-label="Quantity">
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" type="button" @onclick="IncrementCount">+</button>
                    </div>
                </div>
                <button class="btn btn-danger">Remove Item</button>
            </div>
        </div>
    </div>
</div>


@code {

    private int currentCount = 1;
    private TicketViewModel? item;

    //method that will be called when the page is loaded
    protected override async Task OnInitializedAsync()
    {
        //call the method to get the cart items
        //await GetCartItems();
    }

    private void IncrementCount()
    {
        if (currentCount <= 10)
        {
            currentCount++;
        }
    }

    private void DecreaseCount()
    {
        if(currentCount > 0)
        {
            currentCount--;
        }
    }

    //create the method GetCartItems
    private async Task GetCartItems(int id)
    {
        //call the method GetCartItems from the CartService
        //var cartItems = await CartService.GetCartItems();
        //assign the result to the CartItems property
        //CartItems = cartItems;
    }
    //create the property CartItems
    //public List<TicketViewModel> CartItems { get; set; } = new();
    //create the property CartService
//[Inject]
//public ICartService CartService { get; set; }

}
